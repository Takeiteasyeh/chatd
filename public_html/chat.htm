<html><head>
  <script type="text/javascript" src="/assets/chat/chat.js"></script>
  <link rel="stylesheet" href="/assets/chat/chat.css">
  <link href="/assets/font-awesome/css/font-awesome.css" rel="stylesheet" />
</head>

<body>

    <div id="ichatlogin" class="ichat-login">
      <input id="ichatnickname" type="text" placeholder="nickname" /><br />
      <input id="ichatusername" type="text" placeholder="auth username" class="ichat-notguest" /> <br />
      <input id="ichatpassword" type="password" placeholder="password if applicable" class="ichat-notguest" /><br />
      <input id="ichatguest" onchange="ichat_handle_guest_checkbox(this);" type="checkbox" checked="checked" style="float: right; "/> Login as a guest<br />
      
      <input id="ichatloginbutton" type="button" value="connect" onclick="javascript:ichat_attempt_connection()"/>
      <input id="ichatloginbutton2" type="button" value="bench" onclick="javascript:ichat_benchmark(100)"/>
    </div>
    <div id="ichatcontainer" class="ichat-container" style="display: none;">
      <div id="ichat-room-list" class="ichat-room-list">
        <span id="ichat-roomtab-roomlist" class="ichat-roomtab" onclick="javascript:ichat_show_channel_list();"><i class="fa fa-globe"></i> Channel List</span>
      </div>
      <div id="ichat-message-list" class="ichat-message-list">

<div class="dialog" id="ichat-channel-settings-dialog">
    <div class="dialog-header">
      <span>Channel Settings</span>
      <button class="close-btn" onclick="javascript:document.getElementById('ichat-channel-settings-dialog').style.display = 'none';">&times;</button>
    </div>
    <div class="dialog-content">
      <label for="channel-name">Channel Name:</label>
      <input readonly="readonly" type="text" id="ichat-settings-channel-name" placeholder="" />
      <input type="hidden" id="ichat-settings-channel-id" value="" />

      <label for="channel-topic">Channel Topic:</label>
      <input type="text" id="ichat-settings-channel-topic" placeholder="No topic currently set" />

      <label for="access-list">Invite List:</label>
      <textarea id="access-list" rows="4" placeholder="Add users..."></textarea>
      
      <div class="checkbox-groups">
        <div class="checkbox-group">
          <label><input id="ichat-setting-chan-clientinvites" type="checkbox" title="Allow public invites to channel."/> Allow Invites</label>
          <label><input id="ichat-setting-chan-agentonly" type="checkbox" title="Only agents may join the channel."/> Agent Only</label>
          <label><input id="ichat-setting-chan-inviteonly" type="checkbox" title="Members must be invited to join the channel."/> Invite Only</label>
          <label><input id="ichat-setting-chan-savehistory" type="checkbox" title="History will be saved to disk."/> Save History</label>
          <label><input id="ichat-setting-chan-persist" type="checkbox" title="Persist channels that have no members."/> Persist Empty</label>
          <label><input id="ichat-setting-chan-rejoinclients" type="checkbox" title="Rejoin disconnected clients on reconnect."/> Rejoin</label>
        </div>
       <div class="checkbox-group">
          <label><input id="ichat-setting-chan-waitforagent" type="checkbox" /> Wait for Agent</label>
          <label><input id="ichat-setting-chan-cannotleave" type="checkbox" title="Members may not leave the channel."/> May not Leave</label>
          <label><input id="ichat-setting-chan-hiddenmemberlist" type="checkbox" title="Members do not show to non agents."/> Hidden Members</label>
          <label><input id="ichat-setting-chan-hiddenmessages" type="checkbox" title="Messages are only shown to agents."/> Hidden Messages</label>
          <label><input id="ichat-setting-chan-invisible" type="checkbox" title="Channel will not create a physical window."/> Invisible</label>
          <label><input id="ichat-setting-chan-secret" type="checkbox" title="Secret channels do not show up in channel listings."/> Secret</label>
        </div> 
      </div>
    </div>

    <div class="dialog-footer">
      <button onclick="javascript:ichat_save_channel_settings(chatclient);" class="btn save-btn">Save</button>
      <button onclick="javascript:document.getElementById('ichat-channel-settings-dialog').style.display = 'none';" class="btn cancel-btn">Cancel</button>
    </div>
  </div>


        <div id="ichat-channel-list-container" class="ichat-room-container" style="display: none">
<div class="ichat-channel-list-box">
    <div class="ichat-channel-list-header">
              Channel List <a href="#" onclick="chatclient.sendMessage(new CMessage(MessageType.Channels(), '00000000-0000-0000-0000-000000000000', ''));"> <i class="fa fa-refresh"> </i></a>
    </div>
    <div class="ichat-channel-list-content">
      <table class="ichat-channel-list-table">
        <thead>
          <tr>
            <th>Channel</th>
            <th>Topic</th>
            <th>Users</th>
          </tr>
        </thead>
        <tbody id="ichat-channel-list-rows">
        </tbody>
      </table>
    </div>
  </div>
        </div>
      </div>
      <div id="ichat-user-list" class="ichat-user-list">
        <div class="ichat-user-container">
        </div>
      </div>
      <div id="ichat-text-container" class="ichat-text-container">

      </div>
    </div>
    <script type="text/javascript">
// const chatclient = new ChatClient('wss://intraweb.3rad.ca:1300');
// chatclient.on('connect', () => console.log('Connected to the server'));
// chatclient.on('error', (error) => console.log('Error:', error));
// chatclient.connect();
function ichat_handle_guest_checkbox(checkbox) {
  if (checkbox.checked == false) {
    document.getElementById("ichatusername").classList.remove("ichat-notguest");
    document.getElementById("ichatpassword").classList.remove("ichat-notguest");
  } else {
    document.getElementById("ichatusername").classList.add("ichat-notguest");
    document.getElementById("ichatpassword").classList.add("ichat-notguest");
  }
}

function ichat_handle_input(event, id, message) {
  ichat_is_typing_sender(id.replace("ichat-input-", ""), chatclient);
  if (event.key === "Enter") {
    event.preventDefault();
    let actual_id = id.replace("ichat-input-", "");

    //process local commands, bypass with //
    if ((message.charAt(0) == '/') && (message.charAt(1) != '/')) {
      // try to factory a command out of the request
      let command_string = message.substr(1, message.indexOf(" ")-1);
      let command_args = message.substr(message.indexOf(" ")+1).split(" ") || null;

      if (command_string == "") {
        command_string = message.substr(1);
        command_args = null;
      } 

      let command_message = ichat_parse_command_string(id, command_string, command_args, chatclient);

      if (command_message === null) {
        ichat_show_error(actual_id, "Unknown Command", "The command " + command_string.toUpperCase() + " is unknown.<br /><br />For a list of commands, please try /help");
        return;
      }

      if (command_message === -1) {
        return;
      }
      chatclient.sendMessage(command_message);
      document.getElementById(id).value = '';
      console.log("command: " + command_string);

      return;
    }

    chatclient.sendMessage(new CMessage(MessageType.Message(message), actual_id, ""));
    document.getElementById(id).value = '';
  
    // we do not allow html tags, so dont pretend that we do
    message = message.replace(/</g, '&lt;');
    message = message.replace(/>/g, '&gt;');

    // add it to the relevant messages
    let message_container = document.getElementById('ichat-roomcontainer-' + actual_id);
    let mydate = new Date();
    let my_message = `<div title="${mydate.toString()}" class="ichat-message-mine"><span class="ichat-namedisplay">You:</span> <span class="ichat-messagedisplay">${message}</span></div>`;
    message_container.innerHTML += my_message;

    message_container.scrollTo({
    top: message_container.scrollHeight,
    behavior: 'smooth'
  });


  }
}
function ichat_benchmark(count) {
  alert(
    'lol no'
  ); return;
  connections = new Map();
 for (i=0; i < count; i++) {
    client = new ChatClient("ws://intraweb.3rad.ca:100");
    connections.set(i, client);
    client.connect();
  }
}
function ichat_attempt_connection() {
  var asGuest = document.getElementById('ichatguest').checked;
  var guestname = document.getElementById('ichatlogin').value || null
  var password = document.getElementById('ichatpassword').value || null

  if (!asGuest && !guestname && !password)
  {
    alert("Please choose guest login if not providing a username/password.");
    return;
  }
  chatclient = new ChatClient('wss://selfcare.3rad.ca:1300');
  document.getElementById('ichatloginbutton').disabled = true;
  chatclient.on('connect', () => {
    var asGuest = document.getElementById('ichatguest').checked;
    var guestname = document.getElementById('ichatnickname').value || null;
    var username = document.getElementById('ichatusername').value || null;
    var password = document.getElementById('ichatpassword').value || null
  });
  chatclient.on('error', (error) => { console.log('Error:', error);
  document.getElementById('ichatloginbutton').disabled = false;
  });
  chatclient.on('message', (message) => { 
    switch (message.type) {
      case 'AuthOk':
        let myid,myname = message.type.AuthOk;
        console.log("split to " + myid + " ad " + myname);
        break;
    }
  console.log('mymessage: ' + message.type.AuthOk);
  });
type_map = new Map();
chatclient.connect();


}
// chatclient.sendMessage('test');
</script>

</body>
</html>
